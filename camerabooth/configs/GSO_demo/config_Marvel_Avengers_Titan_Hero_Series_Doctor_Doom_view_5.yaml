data:
  params:
    batch_size: 1
    in_the_wild: true
    nearest_cond_views: true
    num_workers: 0
    objaverse_path: ../dataset/data/objaverse
    reg_objaverse: true
    root_dir: ../dataset/data/train/GSO_demo/Marvel_Avengers_Titan_Hero_Series_Doctor_Doom
    total_view: 3
    train:
      image_transforms:
        size: 256
      validation: false
    train_view: 5
    validation:
      image_transforms:
        size: 256
      validation: true
  target: ldm.data.simple.ObjaverseDataModuleFromConfig
lightning:
  callbacks:
    ckpt_callback:
      params:
        save_flag: true
    image_logger:
      params:
        a_gt:
        - 0.5000000000000002
        - 0.5000000000000001
        - 0.5000000070739952
        - 0.33333337629479065
        - 0.500000041230269
        b_gt:
        - 0.0
        - 0.24999999999999997
        - 0.8750000063242495
        - 0.6250000073465815
        - 0.374999987351501
        batch_frequency: 40000
        c_gt:
        - -2.9802321118869e-07
        - 0.0
        - 1.4395592495830556e-07
        - 5.848682268653046e-08
        - 1.439559582649963e-07
        disabled: false
        in_the_wild: true
        increase_log_steps: false
        log_first_step: true
        log_images_kwargs:
          N: 64
          inpaint: false
          plot_diffusion_rows: false
          plot_progressive_rows: false
          unconditional_guidance_label:
          - ''
          unconditional_guidance_scale: 3.0
          use_ema_scope: false
        max_images: 64
        only_camera: false
      target: main.ImageLogger
  find_unused_parameters: false
  metrics_over_trainsteps_checkpoint: true
  modelcheckpoint:
    params:
      every_n_train_steps: 50
  trainer:
    accumulate_grad_batches: 1
    benchmark: true
    max_epochs: 1
    num_sanity_val_steps: 0
    val_check_interval: 10
model:
  base_learning_rate: 0.0001
  params:
    a_init:
    - 0.4722222222222222
    - 0.4728641084994446
    - 0.553636828778721
    - 0.3097992725249163
    - 0.47376363174942027
    b_init:
    - 0.0
    - 0.2506378185953604
    - 0.8745039427197914
    - 0.624336265389742
    - 0.37594823026990676
    c_init:
    - 2.623312056217385e-05
    - 0.0012211003763426148
    - 0.0013208434530314378
    - 6.990428539529629e-05
    - 0.0007013653790315695
    channels: 4
    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenCLIPImageEmbedder
    cond_stage_key: image_cond
    cond_stage_trainable: false
    conditioning_key: hybrid
    first_stage_config:
      params:
        ddconfig:
          attn_resolutions: []
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          double_z: true
          dropout: 0.0
          in_channels: 3
          num_res_blocks: 2
          out_ch: 3
          resolution: 256
          z_channels: 4
        embed_dim: 4
        lossconfig:
          target: torch.nn.Identity
        monitor: val/rec_loss
      target: ldm.models.autoencoder.AutoencoderKL
    first_stage_key: image_target
    image_size: 32
    linear_end: 0.012
    linear_start: 0.00085
    log_directions: 8
    log_every_t: 200
    lr_ratio: 1000
    monitor: val/loss_simple_ema
    num_timesteps_cond: 1
    scale_factor: 0.18215
    scheduler_config:
      params:
        lr_max: 0.1
        lr_min: 1.0e-06
        lr_start: 1.0e-07
        max_decay_steps: 400
        warm_up_steps: 20
      target: ldm.lr_scheduler.LambdaWarmUpCosineScheduler
    search_camera: false
    timesteps: 1000
    unet_config:
      params:
        attention_resolutions:
        - 4
        - 2
        - 1
        channel_mult:
        - 1
        - 2
        - 4
        - 4
        context_dim: 768
        image_size: 32
        in_channels: 8
        legacy: false
        model_channels: 320
        num_heads: 8
        num_res_blocks: 2
        out_channels: 4
        transformer_depth: 1
        use_checkpoint: true
        use_spatial_transformer: true
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
    unet_trainable: attn
  target: ldm.models.diffusion.ddpm.LatentDiffusion
